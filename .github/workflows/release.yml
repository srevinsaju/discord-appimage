
name: Release
on:
  schedule:
    - cron: "5 */12 * * *"
  push:
    branches:
      - "master"
  workflow_dispatch:


jobs:
  Discord:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        version: ['3.8']
    steps:
    - uses: actions/checkout@v2

    - name: Download Discord
      run: |
        mkdir discord
        cd discord
        wget https://discord.com/api/download\?platform\=linux\&format\=tar.gz 
        mv * discord.tar.gz
        tar -xf discord.tar.gz
        cd ..

    - name: Patch to include files
      run: |
        cd discord
        cp ../AppRun Discord/.
        chmod +x Discord/AppRun
        cp ../discord.desktop Discord/.
        cd ..
    
    - name: Patch AppImage
      run: |
        sudo apt install libfuse2 -y
        cd discord
        wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
        chmod +x *.AppImage
        ./appimagetool-x86_64.AppImage Discord -n -u 'gh-releases-zsync|srevinsaju|discord-appimage|stable|Discord*.AppImage.zsync' Discord-$(cat Discord/resources/build_info.json | jq -r .version)-x86_64.AppImage
        mkdir dist
        mv Discord*.AppImage dist/.
        mv *.zsync dist/.
        cd dist
        chmod +x *.AppImage
        cd ..
       

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: discord-continuous-x86_64.AppImage
        path: 'discord/dist'


  Release:
    needs: [Discord]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: discord-continuous-x86_64.AppImage

    - name: Release
      uses: marvinpinto/action-automatic-releases@latest
      with:
        title: Discord Stable AppImage Builds
        automatic_release_tag: stable
        prerelease: false
        draft: false
        files: |
          discord-continuous-x86_64.AppImage
        repo_token: ${{ secrets.GITHUB_TOKEN }}

  Discord-PTB:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        version: ['3.8']
    steps:
    - uses: actions/checkout@v2

    - name: Download Discord
      run: |
        mkdir discord
        cd discord
        wget https://discord.com/api/download/ptb\?platform\=linux\&format\=tar.gz
        mv * discord.tar.gz
        tar -xf discord.tar.gz
        cd ..

    - name: Patch to include files
      run: |
        cd discord
        cp ../AppRun DiscordPTB/.
        chmod +x DiscordPTB/AppRun
        sed 's,BIN="$APPDIR/Discord",BIN="$APPDIR/DiscordPTB",g' -i DiscordPTB/AppRun
        cp ../discord.desktop DiscordPTB/.
        cd ..
    
    - name: Patch AppImage
      run: |
        sudo apt install libfuse2 -y
        cd discord
        wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
        chmod +x *.AppImage
        rm DiscordPTB/discord*ptb*.desktop
        ls DiscordPTB
        ./appimagetool-x86_64.AppImage DiscordPTB -n -u 'gh-releases-zsync|srevinsaju|discord-appimage|canary|Discord*.AppImage.zsync' Discord-$(cat DiscordPTB/resources/build_info.json | jq -r .version)-x86_64.AppImage
        mkdir dist
        mv Discord*.AppImage dist/.
        mv *.zsync dist/.
        cd dist
        chmod +x *.AppImage
        cd ..
       

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: discord-ptb-continuous-x86_64.AppImage
        path: 'discord/dist'


  Release-PTB:
    needs: [Discord-PTB]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: discord-ptb-continuous-x86_64.AppImage

    - name: Release
      uses: marvinpinto/action-automatic-releases@latest
      with:
        title: Discord Public Test AppImage Builds
        automatic_release_tag: ptb
        prerelease: true
        draft: false
        files: |
          discord-ptb-continuous-x86_64.AppImage
        repo_token: ${{ secrets.GITHUB_TOKEN }}

  Discord-Canary:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        version: ['3.8']
    steps:
    - uses: actions/checkout@v2

    - name: Download Discord
      run: |
        mkdir discord
        cd discord
        wget https://discord.com/api/download/canary\?platform\=linux\&format\=tar.gz
        mv * discord.tar.gz
        tar -xf discord.tar.gz
        cd ..

    - name: Patch to include files
      run: |
        cd discord
        cp ../AppRun DiscordCanary/.
        chmod +x DiscordCanary/AppRun
        sed 's,BIN="$APPDIR/Discord",BIN="$APPDIR/DiscordCanary",g' -i DiscordCanary/AppRun
        cp ../discord.desktop DiscordCanary/.
        cd ..
    
    - name: Patch AppImage
      run: |
        sudo apt install libfuse2 -y
        cd discord
        wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
        chmod +x *.AppImage
        rm DiscordCanary/discord*canary*.desktop
        ls DiscordCanary
        ./appimagetool-x86_64.AppImage DiscordCanary -n -u 'gh-releases-zsync|srevinsaju|discord-appimage|canary|Discord*.AppImage.zsync' Discord-$(cat DiscordCanary/resources/build_info.json | jq -r .version)-x86_64.AppImage
        mkdir dist
        mv Discord*.AppImage dist/.
        mv *.zsync dist/.
        cd dist
        chmod +x *.AppImage
        cd ..
       

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: discord-canary-continuous-x86_64.AppImage
        path: 'discord/dist'


  Release-Canary:
    needs: [Discord-Canary]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: discord-canary-continuous-x86_64.AppImage

    - name: Release
      uses: marvinpinto/action-automatic-releases@latest
      with:
        title: Discord Canary AppImage Builds
        automatic_release_tag: canary
        prerelease: true
        draft: false
        files: |
          discord-canary-continuous-x86_64.AppImage
        repo_token: ${{ secrets.GITHUB_TOKEN }}
